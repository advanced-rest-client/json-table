/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   json-table-object.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {PolymerElement} from '@polymer/polymer/polymer-element.js';

import {html} from '@polymer/polymer/lib/utils/html-tag.js';

import {JsonTableMixin} from './json-table-mixin.js';

declare namespace UiElements {

  /**
   * An element that displays object structure.
   *
   * ### Example
   *
   * ```html
   * <json-table-object json="{...}"></json-table-object>
   * ```
   *
   * ### Styling
   *
   * `<json-table>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--json-table-object` | Mixin applied to the element | `{}`
   */
  class JsonTableObject extends
    JsonTableMixin(
    Object) {

    /**
     * An object to render.
     */
    json: object|null|undefined;

    /**
     * data model created from the `json` attribute.
     */
    readonly display: any[]|null|undefined;

    /**
     * Creates a data model from the JSON object.
     * The element is only interested in first level properties. Other properties will be rendered
     * by child elements.
     *
     * TODO: This should be a deep data observer to update only the portion of the model that
     * actually has changed.
     */
    _jsonChanged(json: any): any;
    _computeItemClass(record: any): any;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "json-table-object": UiElements.JsonTableObject;
  }
}
