/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   json-table-object.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="json-table-mixin.d.ts" />
/// <reference path="json-table-array.d.ts" />

declare namespace UiElements {

  /**
   * An element that displays object structure.
   *
   * ### Example
   *
   * ```html
   * <json-table-object json="{...}"></json-table-object>
   * ```
   *
   * ### Styling
   *
   * `<json-table>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--json-table-object` | Mixin applied to the element | `{}`
   */
  class JsonTableObject extends
    JsonTableMixin(
    Polymer.Element) {

    /**
     * An object to render.
     */
    json: object|null|undefined;

    /**
     * data model created from the `json` attribute.
     */
    readonly display: any[]|null|undefined;

    /**
     * Creates a data model from the JSON object.
     * The element is only interested in first level properties. Other properties will be rendered
     * by child elements.
     *
     * TODO: This should be a deep data observer to update only the portion of the model that
     * actually has changed.
     */
    _jsonChanged(json: any): any;
    _computeItemClass(record: any): any;
  }
}

interface HTMLElementTagNameMap {
  "json-table-object": UiElements.JsonTableObject;
}
